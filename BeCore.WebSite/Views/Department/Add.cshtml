@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_PartialLayout.cshtml";
}
@model BeCore.Core.Model.Sys_Departments
<div class="layui-form" lay-filter="layuiadmin-form-useradmin" id="layuiadmin-form-useradmin" style="padding: 20px 0 0 0;">
    <div class="layui-form-item">
        <label class="layui-form-label">部门名称</label>
        <div class="layui-input-inline">
            <input type="text" name="DepartmentName" value="@Model.DepartmentName" lay-verify="required" placeholder="请输入部门名称" autocomplete="off" class="layui-input">
            <input type="hidden" name="Id" value="@Model.Id" />
            <input type="hidden" name="Deleted" value="@Model.Deleted" />
            <input type="hidden" name="CreateTime" value="@Model.CreateTime" />
            <input type="hidden" id="ParentId" name="ParentId" lay-filter="ParentId" value="@Model.ParentId" />


        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">上级部门</label>
        <div class="layui-input-inline">
            <input type="text" id="ParentIdtree" lay-filter="ParentIdtree" class="layui-input" />

        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">排序</label>
        <div class="layui-input-inline">
            <input type="text" name="Sortnum" value="@Model.Sortnum" placeholder="排序越大越靠前" autocomplete="off" class="layui-input">
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">备注</label>
        <div class="layui-input-inline">
            <input type="text" name="Remark" value="@Model.Remark" placeholder="请输入备注" autocomplete="off" class="layui-input">
        </div>
    </div>
    <div class="layui-form-item layui-hide">
        <input type="button" lay-submit lay-filter="LAY-user-front-submit" id="LAY-user-front-submit" value="确认">
    </div>
</div>


@section Scripts{
    <script>

        layui.config({
            base: '/src/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
            //, treeSelect: 'modules/treeSelect'
        }).use(['index', 'treeSelect', 'form', 'upload'], function () {
            var $ = layui.$
                , form = layui.form
                , upload = layui.upload;
            var treeSelect = layui.treeSelect;
            var id = $('#ParentId').val();
            treeSelect.render({
                // 选择器
                elem: '#ParentIdtree',
                // 数据
                //data: '/data/data3.json',
                data: '/Department/TreeData/',//treeinput
                //data: '/Department/treeinput',//treeinput
                //data: '/Department/treeinput',//treeinput
                // 异步加载方式：get/post，默认get
                type: 'get',
                // 占位符
                placeholder: '修改默认提示信息',
                // 是否开启搜索功能：true/false，默认false
                search: true,
                // 点击回调
                click: function (d) {
                    $('#ParentId').val(d.current.id);
                    //console.log('click:');
                    //console.log(d);
                    //console.log('id:');
                    //console.log(d.current.id);
                },
                // 加载完成后的回调函数
                success: function (d) {
                    //debugger
                    var selVal = $('#ParentId').val();
                    //console.log('selVal');
                    //console.log(selVal);
                    //if (selVal != undefined && selVal != null) {
                    //treeSelect.checkNode('treeInput', 0);
                    treeSelect.checkNode('ParentIdtree', selVal);
                    //}
                    //console.log('success');

                    //console.log(d);
                    //                选中节点，根据id筛选
                    //                treeSelect.checkNode('tree', 3);

                    //                获取zTree对象，可以调用zTree方法
                    //                var treeObj = treeSelect.zTree('tree');
                    //                console.log(treeObj);

                    //                刷新树结构
                    //                treeSelect.refresh();
                }
            });
        });
    </script>
}